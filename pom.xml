<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>SF5JSF</groupId>
<artifactId>SF5JSF</artifactId>
<version>0.0.1-SNAPSHOT</version>
<packaging>war</packaging>
<name>Openbox SF5 settings editor</name>
<description>Openbox SF5 settings editor JSF</description>
<properties>
  		<mojarra-version>2.2.12</mojarra-version>
  		<hibernate.version>4.3.11.Final</hibernate.version>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<jersey.version>2.22.1</jersey.version>
</properties>	
  	<build>
<!--     	<sourceDirectory>src</sourceDirectory> This excludes webapp resources from copying to classes! -->
    		<resources>
      			<resource>
        			<directory>src/main/java</directory> <!-- This excludes webapp resources from copying to classes! -->
        			<excludes>
          			<exclude>**/*.java</exclude> 
          			<!-- exclude default, unchanged hibernate.cfg.xml -->
          			<exclude>**/hibernate.cfg.xml</exclude>
        			</excludes>
      			</resource>
    		</resources>
    	<plugins>
		<plugin>
        	<artifactId>maven-compiler-plugin</artifactId>
        	<version>3.3</version>
        	<configuration>
          	<source>1.8</source>
          	<target>1.8</target>
        	</configuration>
		</plugin>
		<plugin>
        	<artifactId>maven-war-plugin</artifactId>
        	<version>2.6</version>
        	<configuration>
          	<warSourceDirectory>src/main/webapp</warSourceDirectory>
          	<failOnMissingWebXml>false</failOnMissingWebXml>
			<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
<!-- 		<packagingExcludes>**/webapp</packagingExcludes>  -->
			<warName>${rp.build.warname}</warName>
			<webResources>
				<resource>
                <filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
                <directory>src/main/java</directory>
                <targetPath>WEB-INF/classes/</targetPath>
                <includes>
                <include>**/hibernate.cfg.xml</include> <!-- the path to hibernate.cfg.xml -->
                </includes>
            	</resource>
        	</webResources>
        	</configuration>
      	</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>	
			<version>2.18.1</version>
			<configuration>
				<includes>
					<include>**/*Tests.java</include>
				</includes>
				<excludes>
            		<exclude>**/*IT.java</exclude>
            	</excludes>
			</configuration>
			<executions>
        	<execution>
            	<phase>integration-test</phase>
            	<goals>
               	<goal>test</goal>
            	</goals>
            		<configuration>
               		<excludes>
                  		<exclude>**/*Tests.java</exclude>
               		</excludes>
            		<includes>
						<include>**/*IT.java</include>
					</includes>
            		</configuration>
        		</execution>
      		</executions>
		</plugin>
				<!-- http://stackoverflow.com/questions/20916581/how-to-do-in-container-testing-of-a-web-app-in-spring -->
		<plugin>
        	<groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.16</version>
             	<configuration>
                     <container>
                         <containerId>glassfish4x</containerId>
						      <zipUrlInstaller>
						        <url>http://download.java.net/glassfish/4.1.1/release/glassfish-4.1.1.zip</url>
						      </zipUrlInstaller>
                     </container>
                     <configuration>
                     	<properties>
                             <cargo.servlet.port>8080</cargo.servlet.port>
                             <cargo.protocol>http</cargo.protocol>
                        </properties>
                        </configuration>

                		<deployables>
                		<deployable>
                		 	<properties>
                		     	<context>${rp.build.warname}</context>
              				</properties>
                		</deployable>
                		</deployables>

                </configuration>
                <executions>
                     <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                        <goal>start</goal>
                    </goals>
                    </execution>
                    	<execution>
                    	<id>stop-container</id>
                    	<phase>post-integration-test</phase>
                    	<goals>
                    		<goal>stop</goal>
                    	</goals>
                	</execution>
            	</executions>
        	</plugin>
	</plugins>
	</build>
		
	<profiles>
   		<profile>
       		<id>test</id> 
       		<properties>
           		<db.jdbcUrl>jdbc:h2:mem:test</db.jdbcUrl>
           		<rp.build.warname>SF5JSF-test</rp.build.warname>
       		</properties>
   		</profile>
   		<profile>
       		<id>prod</id>
       		<properties>
           		<db.jdbcUrl>jdbc:h2:tcp://localhost/~/sf5jsf</db.jdbcUrl>
           		<rp.build.warname>SF5JSF</rp.build.warname>
       		</properties>
   		</profile>
   		<profile>
       		<id>dev</id> 
       		<properties>
           		<db.jdbcUrl>jdbc:h2:tcp://localhost/~/sf5jsfdev</db.jdbcUrl>
           		<rp.build.warname>SF5JSF-test</rp.build.warname>
       		</properties>
   		</profile>
	</profiles>
		
		 
<dependencies>
<dependency>
	<groupId>javax.enterprise</groupId>
	<artifactId>cdi-api</artifactId>
	<version>1.2</version>
	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>javax.servlet</groupId>
	<artifactId>javax.servlet-api</artifactId>
	<version>3.1.0</version>
	<scope>provided</scope>
</dependency>
<!--  or we get package javax.ws.rs does not exist -->
<dependency>
    <groupId>javax</groupId>
    <artifactId>javaee-web-api</artifactId>
    <version>7.0</version>
    <scope>provided</scope>
</dependency>
<dependency>
	<groupId>com.h2database</groupId>
	<artifactId>h2</artifactId>
	<version>1.4.187</version>
</dependency>
<dependency>
	<groupId>org.glassfish.main.common</groupId>
	<artifactId>glassfish-api</artifactId>
	<version>4.1</version>
	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>org.hibernate</groupId>
	<artifactId>hibernate-core</artifactId>
	<version>${hibernate.version}</version>
</dependency>
<dependency>
    <groupId>org.reflections</groupId>
    <artifactId>reflections</artifactId>
    <version>0.9.10</version>
</dependency>
<!-- <dependency> -->
<!-- 	<groupId>org.hibernate</groupId> -->
<!-- 	<artifactId>hibernate-java8</artifactId> -->
<!-- 	<version>${hibernate.version}</version> -->
<!-- </dependency> -->
<!-- <dependency> -->
<!--     <groupId>org.hibernate</groupId> -->
<!--     <artifactId>hibernate-c3p0</artifactId> -->
<!--     <version>${hibernate.version}</version> -->
<!-- </dependency> -->
<dependency>
	<groupId>javax.validation</groupId>
	<artifactId>validation-api</artifactId>
	<version>1.1.0.Final</version>
</dependency>
<dependency>
	<groupId>javax.ejb</groupId>
	<artifactId>javax.ejb-api</artifactId>
	<version>3.2</version>
	<scope>provided</scope>
</dependency>
<dependency>
    <groupId>org.glassfish</groupId>
    <artifactId>javax.json</artifactId>
    <version>1.0.4</version>
 	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>org.hibernate</groupId>
	<artifactId>hibernate-validator</artifactId>
	<version>5.2.1.Final</version>
</dependency>
<!-- JSF implementation: Mojarra org.glassfish - is the one at org.glassfish and it is working! -->
<dependency>
	<groupId>org.glassfish</groupId>
	<artifactId>javax.faces</artifactId>
	<version>${mojarra-version}</version>
	 <scope>provided</scope>
</dependency>

<!-- Testing -->
<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.12</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.assertj</groupId>
	<artifactId>assertj-core</artifactId>
	<version>3.2.0</version>
	<scope>test</scope>
</dependency>
<!-- This is needed to run Hibernate validator -->
<dependency>
	<groupId>org.glassfish.web</groupId>
	<artifactId>el-impl</artifactId>
	<version>2.2</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.glassfish.jersey.core</groupId>
	<artifactId>jersey-client</artifactId>
	<version>${jersey.version}</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.glassfish.jersey.media</groupId>
	<artifactId>jersey-media-json-jackson</artifactId>
	<version>${jersey.version}</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.glassfish.jersey.media</groupId>
	<artifactId>jersey-media-json-processing</artifactId>
	<version>${jersey.version}</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.glassfish.jersey.media</groupId>
	<artifactId>jersey-media-multipart</artifactId>
	<version>${jersey.version}</version>
</dependency>
<dependency>
	<groupId>org.glassfish.hk2</groupId>
	<artifactId>hk2-api</artifactId>
	<version>2.4.0-b33</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>com.fasterxml.jackson.core</groupId>
	<artifactId>jackson-annotations</artifactId>
	<version>2.6.3</version>
</dependency>
<dependency>
	<groupId>org.jboss.arquillian.container</groupId>
	<artifactId>arquillian-container-test-api</artifactId>
	<version>1.1.10.Final</version>
	<scope>test</scope>
</dependency>
<dependency>
	<groupId>org.jboss.arquillian.junit</groupId>
	<artifactId>arquillian-junit-container</artifactId>
	<version>1.1.10.Final</version>
	<scope>test</scope>
</dependency>

</dependencies>
</project>